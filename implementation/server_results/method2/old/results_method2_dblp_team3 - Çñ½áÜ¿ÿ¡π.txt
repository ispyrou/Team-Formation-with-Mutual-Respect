Considering the following customized categories: {'data mining': 1, 'databases': 1, 'algorithms and theory': 1, 'algorithms': 1, 'artificial intelligence': 1, 'natural language processing': 1, 'robotics': 1, 'neural networks': 1}
Creating graphs.
in create_graph_gml_files
in read_dict_to_list
out read_dict_to_list
in read_dict_to_pkl_file
out read_dict_to_pkl_file
in read_dict_to_pkl_file
out read_dict_to_pkl_file
in read_venue_assignments_csv
out read_venue_assignments_csv
in create_cat_venue_dictionary
out create_cat_venue_dictionary
in get_authors
out get_authors
Creating graphs.
in create_graph
out create_graph
in create_graph
out create_graph
in create_graph
out create_graph
in create_graph
out create_graph
in create_graph
out create_graph
in create_graph
out create_graph
in create_graph
out create_graph
in create_graph
out create_graph
Time required to create graphhs is: 25.737658977508545 sec
Adding cross-edges to the graph.
Category is: data mining
New number of nodes of graph: 29275
New number of edges of graph: 628167
Category is: databases
New number of nodes of graph: 31117
New number of edges of graph: 1037344
Category is: algorithms and theory
New number of nodes of graph: 19888
New number of edges of graph: 278766
Category is: algorithms
New number of nodes of graph: 11599
New number of edges of graph: 126716
Category is: artificial intelligence
New number of nodes of graph: 54758
New number of edges of graph: 1043585
Category is: natural language processing
New number of nodes of graph: 21415
New number of edges of graph: 714800
Category is: robotics
New number of nodes of graph: 31713
New number of edges of graph: 886838
Category is: neural networks
New number of nodes of graph: 45523
New number of edges of graph: 780411
Time required to add cross-edges is: 10.03523850440979 sec
out create_graph_gml_files
Cleaning graphs.
in clean_graphs
Creating core graph.
Creating core graph.
Creating core graph.
Creating core graph.
Creating core graph.
Creating core graph.
Creating core graph.
Creating core graph.
out clean_graphs
Length of nodes list: 21330 length of nodes 0
Length of nodes list: 23445 length of nodes 21330
Length of nodes list: 10675 length of nodes 44775
Length of nodes list: 6351 length of nodes 55450
Length of nodes list: 37383 length of nodes 61801
Length of nodes list: 16001 length of nodes 99184
Length of nodes list: 26011 length of nodes 115185
Length of nodes list: 32544 length of nodes 141196
Number of unique nodes 95903 number of all nodes: 173740
Avg End./Role: 659539.375
Avg End./Expert: 55.017204884101645
Max End./Expert 5971
Number of overlapping nodes: 32544
in get_overlapping_graph_nodes
Number of intersecting nodes: 131
out get_overlapping_graph_nodes
Length of x is: 1048
===============================================================================
                                     CVXPY                                     
                                    v1.1.12                                    
===============================================================================
(CVXPY) Mar 31 12:28:30 PM: Your problem has 1048 variables, 3 constraints, and 0 parameters.
(CVXPY) Mar 31 12:28:31 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Mar 31 12:28:31 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Mar 31 12:28:31 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Mar 31 12:28:31 PM: Compiling problem (target solver=GUROBI).
(CVXPY) Mar 31 12:28:31 PM: Reduction chain: CvxAttr2Constr -> Qp2SymbolicQp -> QpMatrixStuffing -> GUROBI
(CVXPY) Mar 31 12:28:31 PM: Applying reduction CvxAttr2Constr
(CVXPY) Mar 31 12:28:31 PM: Applying reduction Qp2SymbolicQp
(CVXPY) Mar 31 12:28:31 PM: Applying reduction QpMatrixStuffing
(CVXPY) Mar 31 12:28:31 PM: Applying reduction GUROBI
(CVXPY) Mar 31 12:28:31 PM: Finished problem compilation (took 7.350e-02 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Mar 31 12:28:31 PM: Invoking solver GUROBI  to obtain a solution.
Academic license - for non-commercial use only - expires 2022-12-18
Using license file /home/pcs00440/gurobi.lic
Parameter OutputFlag unchanged
   Value: 1  Min: 0  Max: 1  Default: 1
Changed value of parameter QCPDual to 1
   Prev: 0  Min: 0  Max: 1  Default: 0
Gurobi Optimizer version 9.1.2 build v9.1.2rc0 (linux64)
Thread count: 16 physical cores, 32 logical processors, using up to 32 threads
Optimize a model with 140 rows, 1048 columns and 3144 nonzeros
Model fingerprint: 0x0d11b374
Model has 27765 quadratic objective terms
Variable types: 0 continuous, 1048 integer (1048 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [0e+00, 0e+00]
  QObjective range [4e+00, 8e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+00]
Found heuristic solution: objective 0.0000000
Presolve removed 1 rows and 0 columns
Presolve time: 0.07s
Presolved: 826 rows, 1735 columns, 31235 nonzeros
Variable types: 0 continuous, 1735 integer (1074 binary)

Explored 0 nodes (0 simplex iterations) in 0.08 seconds
Thread count was 32 (of 32 available processors)

Solution count 1: 0 

Optimal solution found (tolerance 1.00e-04)
Best objective 0.000000000000e+00, best bound 0.000000000000e+00, gap 0.0000%
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Mar 31 12:28:31 PM: Problem status: optimal
(CVXPY) Mar 31 12:28:31 PM: Optimal value: 0.000e+00
(CVXPY) Mar 31 12:28:31 PM: Compilation took 7.350e-02 seconds
(CVXPY) Mar 31 12:28:31 PM: Solver (including time spent in interface) took 1.446e-01 seconds
in compute graph score
Solution is: {'data mining': b'Moshe Y. Vardi', 'databases': b'Kristian Kersting', 'algorithms and theory': b'Manuela M. Veloso', 'algorithms': b'Peter Stone', 'artificial intelligence': b'Rajeev Motwani', 'natural language processing': b'Chen Chen', 'robotics': b'Yi Yang', 'neural networks': b'Adish Singla'}
Solution score for iqp graph truth is: 0
Edges are: []
Running time is: 0.6755452156066895
Considering the following customized categories: {'software engineering': 1, 'operating systems': 1, 'high-performance computing': 1, 'distributed and parallel computing': 1}
Creating graphs.
in create_graph_gml_files
in read_dict_to_list
out read_dict_to_list
in read_dict_to_pkl_file
out read_dict_to_pkl_file
in read_dict_to_pkl_file
out read_dict_to_pkl_file
in read_venue_assignments_csv
Traceback (most recent call last):
  File "method2_dblp.py", line 477, in <module>
    main()
  File "method2_dblp.py", line 390, in main
    category_graph = create_graph_gml_files(file_name_pid_venue,file_name_venues_authors_citations,file_name_pid_authors,file_name_venues_assignment_csv,customized_categories)
  File "method2_dblp.py", line 162, in create_graph_gml_files
    venue_cat_dict = read_venue_assignments_csv(file_name_venues_assignment_csv)
  File "method2_dblp.py", line 48, in read_venue_assignments_csv
    for i, line in enumerate(reader):
  File "/usr/lib/python3.6/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xef in position 0: ordinal not in range(128)
